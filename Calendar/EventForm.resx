<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>